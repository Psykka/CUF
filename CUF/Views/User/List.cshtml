@model IEnumerable<CUF.Models.UserModel>

@{
    ViewData["title"] = "Lista de Usuarios";
}

@section css {
    <style>
        .new-supplier {
            gap: 10px;
            height: 50px;
            font-size: 1.2rem;
            padding: 0 15px;
        }

        .search .btn-squarred {
            width: 100px;
        }

        .search .add {
            width: 70px;
        }

        .search {
            display: flex;
            padding: 0px;
            gap: 15px;

            height: 50px;
            width: 100%;
        }

        .bar {
            flex-grow: 1;
            border-radius: 4px;
        }

        .container {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        table .btn-squarred {
            display: inline-block;
            width: 40px;
            text-align: center;
        }
    </style>
}

<div class="search">
    <input class="form-group form-input bar" id="search-bar" type="text" placeholder="Digite sua busca...">
    <a class="btn-squarred btn-squarred-success add" asp-controller="User" asp-action="Register">
        <span class="material-symbols-outlined">
            add_circle
        </span>
    </a>
</div>
<table id="result">
    <tr>
        <th>ID</th>
        <th class="table-name">Nome de usuario</th>
        <th>Email</th>
        <th>Ações</th>
    </tr>
    @foreach (var user in Model)
    {
        <tr>
            <td>@user.Id</td>
            <td>@user.Username</td>
            <td>@user.Email</td>
            <td>
                <a class="btn-squarred btn-squarred-primary" asp-controller="User" asp-action="Details">
                    <span class="material-symbols-outlined">info</span>
                </a>
                <a class="btn-squarred btn-squarred-success add" asp-controller="User" asp-action="Register"
                    asp-route-id="@user.Id">
                    <span class="material-symbols-outlined">edit</span>
                </a>
            </td>
        </tr>
    }
</table>

@section scripts {
    <script>
        const searchBar = document.getElementById('search-bar')
        const table = document.getElementById('result')

        searchBar.addEventListener('keyup', async (e) => {
            const searchString = e.target.value
            const url = !searchString ? `${host}/User/Get` : `${host}/User/Search?name=${searchString}`

            const users = await fetch(url)
                    .then(response => response.json())

            const rows = users.map(user => {
                return `
                    <tr>
                        <td>${user.id}</td>
                        <td>${user.username}</td>
                        <td>${user.email}</td>
                        <td>
                            <a class="btn-squarred btn-squarred-primary" asp-controller="User" asp-action="Details">
                                <span class="material-symbols-outlined">info</span>
                            </a>
                            <a class="btn-squarred btn-squarred-success add" asp-controller="User" asp-action="Register" asp-route-id="${user.id}">
                                <span class="material-symbols-outlined">edit</span>
                            </a>
                        </td>
                    </tr>
                `
            })

            rows.unshift(`
                <tr>
                    <th>ID</th>
                    <th class="table-name">Nome de Usuario</th>
                    <th>Email</th>
                    <th>Ações</th>
                </tr>
            `)

            table.innerHTML = rows.join('')
        })
    </script>
}

